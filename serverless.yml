org: sebastiancontreras
app: starwars-comments-api
service: starwars-comments-api

stages:
  default:
    params:
      tableName: "comments-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [CommentsTable, Arn]
            - Fn::Sub: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.COMMENT_TABLE_NAME}/index/recurso-recursoId-index
  environment:
    COMMENT_TABLE_NAME: ${param:tableName}

functions:
  api:
    handler: src/handler.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    CommentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${param:tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: recursoId
            AttributeType: S
          - AttributeName: recurso
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: recurso-recursoId-index
            KeySchema:
              - AttributeName: recurso
                KeyType: HASH
              - AttributeName: recursoId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

